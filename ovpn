#!/bin/bash

# Path to the OpenVPN configuration file
CONFIG_FILE="/home/user/openvpn/config.ovpn"

# Name of the OpenVPN process
VPN_PROCESS="openvpn"

# VPN IP address
VPN_IP="10.10.10.10"

# Timeout for curl command (in seconds)
CURL_TIMEOUT=2

# Check for required commands
for cmd in $VPN_PROCESS curl pgrep pkill; do
    command -v "$cmd" >/dev/null 2>&1 || { echo >&2 "The script requires $cmd but it's not installed.  Aborting."; exit 1; }
done

# Function to connect to the VPN
connect() {
    echo "Starting VPN..."
    sudo $VPN_PROCESS --config "$CONFIG_FILE" &
}

# Function to disconnect from the VPN
disconnect() {
    echo "Stopping VPN..."
    sudo pkill -f $VPN_PROCESS
}

# Function to check VPN status
check_status() {
    vpn_ip=$(curl --connect-timeout $CURL_TIMEOUT -s $VPN_IP/whoami)
    if [[ $vpn_ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "VPN IP address: $vpn_ip"
        echo "VPN status: Connected"
    else
        echo "VPN status: Disconnected"
    fi
}

# Function to display available actions
show_help() {
    cat <<- EOF
    Usage: ovpn {start|stop|restart|status}
           ovpn --help     Display this help message
EOF
}

# Main script logic
case "$1" in
    start|connect)
        pgrep -x $VPN_PROCESS >/dev/null && echo "VPN connection is already active." || connect
        ;;
    stop|disconnect)
        disconnect
        ;;
    restart)
        disconnect
        sleep 5
        connect
        ;;
    status)
        check_status
        ;;
    --help|"")
        show_help
        ;;
    *)
        echo "Invalid option: $1"
        show_help
        exit 1
        ;;
esac
